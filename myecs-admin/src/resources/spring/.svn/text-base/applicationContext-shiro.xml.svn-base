<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName" default-lazy-init="true"> 
	
	<!-- shiro的缓存管理器，然后需要将缓存管理器注入   到安全管理其中  -->  
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
	        <!--classpath是缓存属性的配置文件  -->  
	        <property name="cacheManagerConfigFile" value="classpath:config/ehcache-shiro.xml" />  
	</bean>
	
		
	<!-- 会话Cookie模板,关闭浏览器,就要重新登录 -->  
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="sid"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="-1"/>  
	</bean>
	
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="rememberMe"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="2592000"/><!-- 30天 -->  
	</bean>
	
	<!-- rememberMe管理器 -->  
	<bean id="rememberMeManager"   
	class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
	    <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>  
	     <property name="cookie" ref="rememberMeCookie"/>  
	</bean>  

	
	
	<!-- 配置权限管理器 -->  
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager"> 
    	<!-- ref对应我们写的realm  MyShiro -->  
        <property name="realm" ref="authorizingRealm"/> 
        <!-- 使用下面配置的缓存管理器 -->  
        <property name="cacheManager" ref="shiroEhcacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/> 
    </bean>
    
    <bean id="authorizingRealm" class="cn.com.sinosoft.iecshop.generic.service.impl.AuthorizingServiceImpl">
    	<property name="credentialsMatcher" ref="credentialsMatcher"></property>
    	<property name="authorizationCacheName" value="shiroAuthorizationCache" />
    </bean>
    <!-- 凭证匹配器(密码匹配器) -->
    <bean id="credentialsMatcher" class="cn.com.sinosoft.iecshop.generic.util.shiro.IecsLoginCredentialsMatcher"></bean>
    <!-- 自定义认证filter -->
   <bean id="iecsLoginAuthenFilter" class="cn.com.sinosoft.iecshop.generic.util.shiro.IecsLoginAuthenFilter">
   		<property name="rememberMeParam" value="rememberMe"/> 
   </bean>
   <bean id="rememberFilter" class="cn.com.sinosoft.iecshop.generic.util.shiro.IecsLoginRememberAuthFilter"></bean>
        
	<!-- 配置shiro的过滤器工厂类 id- shiroFilter要和我们在web.xml中配置的过滤器一致  -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		 <!-- 调用我们配置的权限管理器 --> 
	    <property name="securityManager" ref="securityManager" />
	    <property name="successUrl" value="/admin/jumpMainPage.do" />
	    <property name="loginUrl" value="/admin/jumpLoginPage.do" />
	    <!--  认证未通过访问的页面 -->
	    <property name="unauthorizedUrl" value="/page/login.jsp" />
	    <!-- 覆盖原有filter -->
	     <property name="filters">  
            <map>  
                <entry key="authc" value-ref="iecsLoginAuthenFilter" />  
                <entry key="user" value-ref="rememberFilter" />
            </map>  
        </property>  
        
        <!-- shiro连接约束配置,在这里使用自定义的动态获取资源类 --> 
         <property name="filterChainDefinitionMap" ref="iecsLoginDefinitionSectionMetaSource" />
        
	   
    </bean>
    
    <!-- 自定义资源权限 -->
    
    <bean id="iecsLoginDefinitionSectionMetaSource" class="cn.com.sinosoft.iecshop.generic.util.shiro.IecsLoginDefinitionSectionMetaSource">
    		<property name="filterChainDefinitions">
    			<value>
    				 <!-- anon表示此地址不需要任何权限即可访问 -->  
		    		  /kaptcha.jpg = anon
	                  /**/css/**=anon
	                  /**/js/**=anon
	                /**/images/**=anon
	                /**/image/**=anon
	                /page/login.jsp = anon
	                /=user
	               /**/*.html=anon
	               /**/*.shtml=anon
	                /**/*.jhtml=anon
	                 /**/*.htm=anon
	               /logout = logout
	               <!-- user:表示访问该地址的用户是身份验证通过或RememberMe登录的都可以
	               authc:表示访问该地址用户必须身份验证通过（Subject. isAuthenticated()==true）
	                -->
	              /admin/jumpLoginPage.do = authc
	    		 /admin/jumpMainPage.do=user 
	    		 /admin/ = anon
	    		 /**/admin/uploadFile.do = anon
		    		
	               <!-- perms[user:query]表示访问此连接需要权限为user:query的用户 
	                /user=perms[user:query]  
	               -->
	                
	               <!-- roles[manager]表示访问此连接需要用户的角色为manager 
	                 /user/add=roles[manager]
	               -->
	                  
	                 <!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login--> 
	                /**/*.do = user 
    			</value>
    		</property>
    </bean>
    <!-- 退出 -->
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/page/login.jsp" />
    </bean> 
    
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->  
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
   
</beans>